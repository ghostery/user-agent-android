From c24ca75f17f8760cec332a639ee85a7c0a5e019f Mon Sep 17 00:00:00 2001
From: Sam Macbeth <sam@cliqz.com>
Date: Mon, 3 Aug 2020 18:21:01 +0200
Subject: Removig "What's new" from the Home menu

---
 .../java/org/mozilla/fenix/home/HomeMenu.kt   | 50 -------------------
 1 file changed, 50 deletions(-)

diff --git a/fenix/app/src/main/java/org/mozilla/fenix/home/HomeMenu.kt b/fenix/app/src/main/java/org/mozilla/fenix/home/HomeMenu.kt
index 1588f03a84..cdfeb884f8 100644
--- a/fenix/app/src/main/java/org/mozilla/fenix/home/HomeMenu.kt
+++ b/fenix/app/src/main/java/org/mozilla/fenix/home/HomeMenu.kt
@@ -98,12 +98,6 @@ class HomeMenu(
         }
     }
 
-    private fun syncSignInMenuItem(): BrowserMenuItem {
-        return BrowserMenuSignIn(primaryTextColor) {
-            onItemTapped.invoke(Item.SyncAccount(accountManager.accountState))
-        }
-    }
-
     val desktopItem = BrowserMenuImageSwitch(
         imageResource = R.drawable.ic_desktop,
         label = context.getString(R.string.browser_menu_desktop_site),
@@ -140,14 +134,6 @@ class HomeMenu(
             onItemTapped.invoke(Item.Downloads)
         }
 
-        val extensionsItem = BrowserMenuImageText(
-            context.getString(R.string.browser_menu_add_ons),
-            R.drawable.ic_addons_extensions,
-            primaryTextColor,
-        ) {
-            onItemTapped.invoke(Item.Extensions)
-        }
-
         val manageAccountAndDevicesItem = SimpleBrowserMenuItem(
             context.getString(R.string.browser_menu_manage_account_and_devices),
             textColorResource = primaryTextColor,
@@ -155,26 +141,6 @@ class HomeMenu(
             onItemTapped.invoke(Item.ManageAccountAndDevices)
         }
 
-        val whatsNewItem = BrowserMenuHighlightableItem(
-            context.getString(R.string.browser_menu_whats_new),
-            R.drawable.ic_whats_new,
-            iconTintColorResource = primaryTextColor,
-            highlight = BrowserMenuHighlight.LowPriority(
-                notificationTint = getColor(context, R.color.fx_mobile_icon_color_information),
-            ),
-            isHighlighted = { WhatsNew.shouldHighlightWhatsNew(context) },
-        ) {
-            onItemTapped.invoke(Item.WhatsNew)
-        }
-
-        val helpItem = BrowserMenuImageText(
-            context.getString(R.string.browser_menu_help),
-            R.drawable.mozac_ic_help,
-            primaryTextColor,
-        ) {
-            onItemTapped.invoke(Item.Help)
-        }
-
         val customizeHomeItem = BrowserMenuImageText(
             context.getString(R.string.browser_menu_customize_home_1),
             R.drawable.ic_customize,
@@ -193,30 +159,14 @@ class HomeMenu(
             onItemTapped.invoke(Item.Settings)
         }
 
-        // Only query account manager if it has been initialized.
-        // We don't want to cause its initialization just for this check.
-        val accountAuthItem =
-            if (context.components.backgroundServices.accountManagerAvailableQueue.isReady() &&
-                context.components.backgroundServices.accountManager.accountNeedsReauth()
-            ) {
-                reconnectToSyncItem
-            } else {
-                null
-            }
-
         val menuItems = listOfNotNull(
             bookmarksItem,
             historyItem,
             downloadsItem,
-            extensionsItem,
-            syncSignInMenuItem(),
-            accountAuthItem,
             if (Config.channel.isMozillaOnline) manageAccountAndDevicesItem else null,
             BrowserMenuDivider(),
             desktopItem,
             BrowserMenuDivider(),
-            whatsNewItem,
-            helpItem,
             customizeHomeItem,
             settingsItem,
             if (settings.shouldDeleteBrowsingDataOnQuit) quitItem else null,
-- 
2.39.2 (Apple Git-143)

