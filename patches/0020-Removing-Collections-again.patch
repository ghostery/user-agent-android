From 331fec151cd627c51fae4c1b2c34d4d81cb31403 Mon Sep 17 00:00:00 2001
From: Stefano Pacifici <stefano.pacifici@gmail.com>
Date: Fri, 26 Jun 2020 16:18:32 +0200
Subject: Removing Collections (again)

---
 .../components/toolbar/DefaultToolbarMenu.kt  | 23 ---------------
 .../sessioncontrol/SessionControlAdapter.kt   | 21 --------------
 .../home/sessioncontrol/SessionControlView.kt | 28 ++-----------------
 .../fenix/tabstray/TabsTrayFragment.kt        |  1 -
 .../fenix/tabstray/TabsTrayBanner.kt          | 15 ----------
 .../browser/SelectionBannerBinding.kt         |  4 ---
 .../main/res/layout/component_tabstray2.xml   |  2 +-
 .../res/layout/tabstray_multiselect_items.xml | 13 ---------
 8 files changed, 3 insertions(+), 104 deletions(-)

diff --git a/fenix/app/src/main/java/org/mozilla/fenix/components/toolbar/DefaultToolbarMenu.kt b/fenix/app/src/main/java/org/mozilla/fenix/components/toolbar/DefaultToolbarMenu.kt
index 8428377562..d2df2f5042 100644
--- a/fenix/app/src/main/java/org/mozilla/fenix/components/toolbar/DefaultToolbarMenu.kt
+++ b/fenix/app/src/main/java/org/mozilla/fenix/components/toolbar/DefaultToolbarMenu.kt
@@ -245,10 +245,6 @@ open class DefaultToolbarMenu(
         onItemTapped.invoke(ToolbarMenu.Item.Downloads)
     }

-    private val extensionsItem = WebExtensionPlaceholderMenuItem(
-        id = WebExtensionPlaceholderMenuItem.MAIN_EXTENSIONS_MENU_ID,
-    )
-
     private val findInPageItem = BrowserMenuImageText(
         label = context.getString(R.string.browser_menu_find_in_page),
         imageResource = R.drawable.mozac_ic_search_24,
@@ -335,14 +331,6 @@ open class DefaultToolbarMenu(
         },
     )

-    private val saveToCollectionItem = BrowserMenuImageText(
-        label = context.getString(R.string.browser_menu_save_to_collection_2),
-        imageResource = R.drawable.ic_tab_collection,
-        iconTintColorResource = primaryTextColor(),
-    ) {
-        onItemTapped.invoke(ToolbarMenu.Item.SaveToCollection)
-    }
-
     private val printPageItem = BrowserMenuImageText(
         label = context.getString(R.string.menu_print),
         imageResource = R.drawable.ic_print,
@@ -400,14 +388,6 @@ open class DefaultToolbarMenu(
         onItemTapped.invoke(ToolbarMenu.Item.Quit)
     }

-    private fun syncMenuItem(): BrowserMenuItem {
-        return BrowserMenuSignIn(primaryTextColor()) {
-            onItemTapped.invoke(
-                ToolbarMenu.Item.SyncAccount(accountManager.accountState),
-            )
-        }
-    }
-
     @VisibleForTesting(otherwise = PRIVATE)
     val coreMenuItems by lazy {
         val menuItems =
@@ -418,8 +398,6 @@ open class DefaultToolbarMenu(
                 bookmarksItem,
                 historyItem,
                 downloadsItem,
-                extensionsItem,
-                syncMenuItem(),
                 BrowserMenuDivider(),
                 findInPageItem,
                 translationsItem.apply { visible = ::shouldShowTranslations },
@@ -432,7 +410,6 @@ open class DefaultToolbarMenu(
                 addToHomeScreenItem.apply { visible = ::canAddToHomescreen },
                 installToHomescreen.apply { visible = ::canInstall },
                 if (shouldShowTopSites) addRemoveTopSitesItem else null,
-                saveToCollectionItem,
                 if (FxNimbus.features.print.value().browserPrintEnabled) printPageItem else null,
                 BrowserMenuDivider(),
                 settingsItem,
diff --git a/fenix/app/src/main/java/org/mozilla/fenix/home/sessioncontrol/SessionControlAdapter.kt b/fenix/app/src/main/java/org/mozilla/fenix/home/sessioncontrol/SessionControlAdapter.kt
index 4dd98bfd57..91b7473b06 100644
--- a/fenix/app/src/main/java/org/mozilla/fenix/home/sessioncontrol/SessionControlAdapter.kt
+++ b/fenix/app/src/main/java/org/mozilla/fenix/home/sessioncontrol/SessionControlAdapter.kt
@@ -99,23 +99,6 @@ sealed class AdapterItem(@LayoutRes val viewType: Int) {
     object PrivateBrowsingDescription : AdapterItem(PrivateBrowsingDescriptionViewHolder.LAYOUT_ID)
     object NoCollectionsMessage : AdapterItem(NoCollectionsMessageViewHolder.LAYOUT_ID)

-    object CollectionHeader : AdapterItem(CollectionHeaderViewHolder.LAYOUT_ID)
-    data class CollectionItem(
-        val collection: TabCollection,
-        val expanded: Boolean,
-    ) : AdapterItem(CollectionViewHolder.LAYOUT_ID) {
-        override fun sameAs(other: AdapterItem) =
-            other is CollectionItem && collection.id == other.collection.id
-
-        override fun contentsSameAs(other: AdapterItem): Boolean {
-            (other as? CollectionItem)?.let {
-                return it.expanded == this.expanded &&
-                    it.collection.title == this.collection.title &&
-                    it.collection.tabs == this.collection.tabs
-            } ?: return false
-        }
-    }
-
     data class TabInCollectionItem(
         val collection: TabCollection,
         val tab: ComponentTab,
@@ -373,10 +356,6 @@ class SessionControlAdapter(
             is MessageCardViewHolder -> {
                 holder.bind((item as AdapterItem.NimbusMessageCard).message)
             }
-            is CollectionViewHolder -> {
-                val (collection, expanded) = item as AdapterItem.CollectionItem
-                holder.bindSession(collection, expanded)
-            }
             is TabInCollectionViewHolder -> {
                 val (collection, tab, isLastTab) = item as AdapterItem.TabInCollectionItem
                 holder.bindSession(collection, tab, isLastTab)
diff --git a/fenix/app/src/main/java/org/mozilla/fenix/home/sessioncontrol/SessionControlView.kt b/fenix/app/src/main/java/org/mozilla/fenix/home/sessioncontrol/SessionControlView.kt
index 2f50a9494b..728208237d 100644
--- a/fenix/app/src/main/java/org/mozilla/fenix/home/sessioncontrol/SessionControlView.kt
+++ b/fenix/app/src/main/java/org/mozilla/fenix/home/sessioncontrol/SessionControlView.kt
@@ -28,7 +28,8 @@ import org.mozilla.fenix.utils.Settings

 // This method got a little complex with the addition of the tab tray feature flag
 // When we remove the tabs from the home screen this will get much simpler again.
-@Suppress("ComplexMethod", "LongParameterList")
+@Suppress("UNUSED_PARAMETER")
+@SuppressWarnings("UNUSED_PARAMETER", "ComplexMethod")
 @VisibleForTesting
 internal fun normalModeAdapterItems(
     settings: Settings,
@@ -79,14 +80,6 @@ internal fun normalModeAdapterItems(
         items.add(AdapterItem.RecentVisitsItems)
     }

-    if (collections.isEmpty()) {
-        if (showCollectionsPlaceholder) {
-            items.add(AdapterItem.NoCollectionsMessage)
-        }
-    } else {
-        showCollections(collections, expandedCollections, items)
-    }
-
     // When Pocket is enabled and the initial layout of the app is done, then we can add these items
     // to render to the home screen.
     // This is only useful while we have a RecyclerView + Compose implementation. We can remove this
@@ -107,23 +100,6 @@ internal fun normalModeAdapterItems(
     return items
 }

-private fun showCollections(
-    collections: List<TabCollection>,
-    expandedCollections: Set<Long>,
-    items: MutableList<AdapterItem>,
-) {
-    // If the collection is expanded, we want to add all of its tabs beneath it in the adapter
-    items.add(AdapterItem.CollectionHeader)
-    collections.map {
-        AdapterItem.CollectionItem(it, expandedCollections.contains(it.id))
-    }.forEach {
-        items.add(it)
-        if (it.expanded) {
-            items.addAll(collectionTabItems(it.collection))
-        }
-    }
-}
-
 private fun privateModeAdapterItems() = listOf(AdapterItem.PrivateBrowsingDescription)

 private fun AppState.toAdapterList(settings: Settings): List<AdapterItem> = when (mode) {
diff --git a/fenix/app/src/main/java/org/mozilla/fenix/tabstray/TabsTrayFragment.kt b/fenix/app/src/main/java/org/mozilla/fenix/tabstray/TabsTrayFragment.kt
index f15acf5997..c310ebcdca 100644
--- a/fenix/app/src/main/java/org/mozilla/fenix/tabstray/TabsTrayFragment.kt
+++ b/fenix/app/src/main/java/org/mozilla/fenix/tabstray/TabsTrayFragment.kt
@@ -466,7 +466,6 @@ class TabsTrayFragment : AppCompatDialogFragment() {
                     interactor = tabsTrayInteractor,
                     backgroundView = tabsTrayBinding.topBar,
                     showOnSelectViews = VisibilityModifier(
-                        tabsTrayMultiselectItemsBinding.collectMultiSelect,
                         tabsTrayMultiselectItemsBinding.shareMultiSelect,
                         tabsTrayMultiselectItemsBinding.menuMultiSelect,
                         tabsTrayBinding.multiselectTitle,
diff --git a/fenix/app/src/main/java/org/mozilla/fenix/tabstray/browser/SelectionBannerBinding.kt b/fenix/app/src/main/java/org/mozilla/fenix/tabstray/browser/SelectionBannerBinding.kt
index da2ee01c80..5796659bbc 100644
--- a/fenix/app/src/main/java/org/mozilla/fenix/tabstray/browser/SelectionBannerBinding.kt
+++ b/fenix/app/src/main/java/org/mozilla/fenix/tabstray/browser/SelectionBannerBinding.kt
@@ -89,12 +89,6 @@ class SelectionBannerBinding(
             interactor.onShareSelectedTabs()
         }

-        tabsTrayMultiselectItemsBinding.collectMultiSelect.setOnClickListener {
-            if (store.state.mode.selectedTabs.isNotEmpty()) {
-                interactor.onAddSelectedTabsToCollectionClicked()
-            }
-        }
-
         binding.exitMultiSelect.setOnClickListener {
             store.dispatch(ExitSelectMode)
         }
diff --git a/fenix/app/src/main/res/layout/component_tabstray2.xml b/fenix/app/src/main/res/layout/component_tabstray2.xml
index cc5029796a..5678832636 100644
--- a/fenix/app/src/main/res/layout/component_tabstray2.xml
+++ b/fenix/app/src/main/res/layout/component_tabstray2.xml
@@ -65,7 +65,7 @@
         android:textColor="@color/fx_mobile_text_color_oncolor_primary"
         android:importantForAccessibility="no"
         app:layout_constraintBottom_toBottomOf="@id/topBar"
-        app:layout_constraintEnd_toStartOf="@id/collect_multi_select"
+        app:layout_constraintEnd_toStartOf="@id/share_multi_select"
         app:layout_constraintHorizontal_bias="0.0"
         app:layout_constraintHorizontal_chainStyle="packed"
         app:layout_constraintStart_toEndOf="@+id/exit_multi_select"
diff --git a/fenix/app/src/main/res/layout/tabstray_multiselect_items.xml b/fenix/app/src/main/res/layout/tabstray_multiselect_items.xml
index 67d2eee9e2..01b3348b22 100644
--- a/fenix/app/src/main/res/layout/tabstray_multiselect_items.xml
+++ b/fenix/app/src/main/res/layout/tabstray_multiselect_items.xml
@@ -9,19 +9,6 @@
     android:layout_height="wrap_content"
     tools:parentTag="androidx.constraintlayout.widget.ConstraintLayout">

-    <ImageButton
-        android:id="@+id/collect_multi_select"
-        android:layout_width="48dp"
-        android:layout_height="48dp"
-        android:background="?android:attr/selectableItemBackgroundBorderless"
-        android:contentDescription="@string/tab_tray_collection_button_multiselect_content_description"
-        android:visibility="gone"
-        app:layout_constraintBottom_toBottomOf="@id/topBar"
-        app:layout_constraintEnd_toStartOf="@id/share_multi_select"
-        app:layout_constraintTop_toTopOf="@id/topBar"
-        app:srcCompat="@drawable/ic_tab_collection"
-        app:tint="@color/fx_mobile_icon_color_oncolor" />
-
     <ImageButton
         android:id="@+id/share_multi_select"
         android:layout_width="48dp"
diff --git a/fenix/app/src/main/java/org/mozilla/fenix/tabstray/TabsTrayBanner.kt b/fenix/app/src/main/java/org/mozilla/fenix/tabstray/TabsTrayBanner.kt
index 13e9c1d4c0..b79cf09111 100644
--- a/fenix/app/src/main/java/org/mozilla/fenix/tabstray/TabsTrayBanner.kt
+++ b/fenix/app/src/main/java/org/mozilla/fenix/tabstray/TabsTrayBanner.kt
@@ -243,21 +243,6 @@ private fun SingleSelectBanner(
                         unselectedContentColor = inactiveColor,
                     )

-                    Tab(
-                        selected = selectedPage == Page.SyncedTabs,
-                        onClick = { onTabPageIndicatorClicked(Page.SyncedTabs) },
-                        modifier = Modifier
-                            .fillMaxHeight()
-                            .testTag(TabsTrayTestTag.syncedTabsPageButton),
-                        icon = {
-                            Icon(
-                                painter = painterResource(id = R.drawable.ic_synced_tabs),
-                                contentDescription = stringResource(id = R.string.tabs_header_synced_tabs_title),
-                            )
-                        },
-                        selectedContentColor = selectedColor,
-                        unselectedContentColor = inactiveColor,
-                    )
                 }
             }

--
2.39.2 (Apple Git-143)

