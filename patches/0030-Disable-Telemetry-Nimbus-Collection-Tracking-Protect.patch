From 510aa4963676279eb53d77f7ebfeae1af68dedfc Mon Sep 17 00:00:00 2001
From: Krzysztof Modras <chrmod@chrmod.net>
Date: Fri, 25 Feb 2022 15:56:39 +0100
Subject: Disable Telemetry, Nimbus, Collection, Tracking Protection

---
 .../java/org/mozilla/fenix/utils/Settings.kt  | 35 ++++---------------
 1 file changed, 7 insertions(+), 28 deletions(-)

diff --git a/app/src/main/java/org/mozilla/fenix/utils/Settings.kt b/app/src/main/java/org/mozilla/fenix/utils/Settings.kt
index 1fa439bdd..a77734a29 100644
--- a/app/src/main/java/org/mozilla/fenix/utils/Settings.kt
+++ b/app/src/main/java/org/mozilla/fenix/utils/Settings.kt
@@ -241,10 +241,7 @@ class Settings(private val appContext: Context) : PreferencesHolder {
         default = false
     )
 
-    var showCollectionsPlaceholderOnHome by booleanPreference(
-        appContext.getPreferenceKey(R.string.pref_key_show_collections_placeholder_home),
-        default = true
-    )
+    var showCollectionsPlaceholderOnHome = false
 
     val isCrashReportingEnabled: Boolean
         get() = isCrashReportEnabledInBuild &&
@@ -258,20 +255,11 @@ class Settings(private val appContext: Context) : PreferencesHolder {
         default = false
     )
 
-    val isTelemetryEnabled by booleanPreference(
-        appContext.getPreferenceKey(R.string.pref_key_telemetry),
-        default = true
-    )
+    val isTelemetryEnabled = false
 
-    val isMarketingTelemetryEnabled by booleanPreference(
-        appContext.getPreferenceKey(R.string.pref_key_marketing_telemetry),
-        default = true
-    )
+    val isMarketingTelemetryEnabled = false
 
-    var isExperimentationEnabled by booleanPreference(
-        appContext.getPreferenceKey(R.string.pref_key_experimentation),
-        default = true
-    )
+    var isExperimentationEnabled = false
 
     var isOverrideTPPopupsForPerformanceTest = false
 
@@ -586,20 +574,11 @@ class Settings(private val appContext: Context) : PreferencesHolder {
         default = false
     )
 
-    val useStandardTrackingProtection by booleanPreference(
-        appContext.getPreferenceKey(R.string.pref_key_tracking_protection_standard_option),
-        true
-    )
+    val useStandardTrackingProtection = false
 
-    val useStrictTrackingProtection by booleanPreference(
-        appContext.getPreferenceKey(R.string.pref_key_tracking_protection_strict_default),
-        false
-    )
+    val useStrictTrackingProtection = false
 
-    val useCustomTrackingProtection by booleanPreference(
-        appContext.getPreferenceKey(R.string.pref_key_tracking_protection_custom_option),
-        false
-    )
+    val useCustomTrackingProtection = false
 
     @VisibleForTesting(otherwise = PRIVATE)
     fun setStrictETP() {
-- 
2.35.1

