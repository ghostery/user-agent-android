From 853a0ed58ee9a2b58dadffd79b9f314092839497 Mon Sep 17 00:00:00 2001
From: Sam Macbeth <sam@cliqz.com>
Date: Mon, 3 Aug 2020 16:46:47 +0200
Subject: Disabling Telemetry & CrashReports

---
 app/build.gradle                              |  2 +-
 .../org/mozilla/fenix/FenixApplication.kt     | 40 -------------------
 .../org/mozilla/fenix/components/Analytics.kt | 29 ++++----------
 .../fenix/crashes/DummyCrashReporter.kt       | 19 +++++++++
 app/src/main/res/xml/preferences.xml          | 10 -----
 7 files changed, 46 insertions(+), 89 deletions(-)
 create mode 100644 app/src/main/java/org/mozilla/fenix/crashes/DummyCrashReporter.kt

diff --git a/app/build.gradle b/app/build.gradle
index 42cc15cd5..4ee964148 100644
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -102,7 +102,7 @@ android {
         debug {
             shrinkResources false
             minifyEnabled false
-            applicationIdSuffix ".fenix.debug"
+            applicationIdSuffix ".debug"
             resValue "bool", "IS_DEBUG", "true"
             pseudoLocalesEnabled true
         }
diff --git a/app/src/main/java/org/mozilla/fenix/FenixApplication.kt b/app/src/main/java/org/mozilla/fenix/FenixApplication.kt
index 5ed920a82..2c672361f 100644
--- a/app/src/main/java/org/mozilla/fenix/FenixApplication.kt
+++ b/app/src/main/java/org/mozilla/fenix/FenixApplication.kt
@@ -149,7 +149,7 @@ open class FenixApplication : LocaleAwareApplication(), Provider {

     @OptIn(DelicateCoroutinesApi::class) // GlobalScope usage
     protected open fun initializeGlean() {
-        val telemetryEnabled = settings().isTelemetryEnabled
+        val telemetryEnabled = false

         logger.debug("Initializing Glean (uploadEnabled=$telemetryEnabled})")

@@ -381,10 +345,6 @@ open class FenixApplication : LocaleAwareApplication(), Provider {
     }

     private fun setupCrashReporting() {
-        components
-            .analytics
-            .crashReporter
-            .install(this)
     }

     /**
diff --git a/app/src/main/java/org/mozilla/fenix/components/Analytics.kt b/app/src/main/java/org/mozilla/fenix/components/Analytics.kt
index 69258a76c..7b3f8e589 100644
--- a/app/src/main/java/org/mozilla/fenix/components/Analytics.kt
+++ b/app/src/main/java/org/mozilla/fenix/components/Analytics.kt
@@ -24,6 +24,7 @@ import org.mozilla.fenix.ReleaseChannel
 import org.mozilla.fenix.components.metrics.AdjustMetricsService
 import org.mozilla.fenix.components.metrics.GleanMetricsService
 import org.mozilla.fenix.components.metrics.MetricController
+import org.mozilla.fenix.crashes.DummyCrashReporter
 import org.mozilla.fenix.experiments.createNimbus
 import org.mozilla.fenix.ext.settings
 import org.mozilla.fenix.gleanplumb.CustomAttributeProvider
@@ -44,10 +45,6 @@ class Analytics(
 ) {
     val crashReporter: CrashReporter by lazyMonitored {
         val services = mutableListOf<CrashReporterService>()
-        val distributionId = when (Config.channel.isMozillaOnline) {
-            true -> "MozillaOnline"
-            false -> "Mozilla"
-        }

         if (isSentryEnabled()) {
             // We treat caught exceptions similar to debug logging.
@@ -59,17 +56,10 @@ class Analytics(
             )

             services.add(sentryService)
+        } else {
+            services.add(DummyCrashReporter())
         }

-        // The name "Fenix" here matches the product name on Socorro and is unrelated to the actual app name:
-        // https://bugzilla.mozilla.org/show_bug.cgi?id=1523284
-        val socorroService = MozillaSocorroService(
-            context, appName = "Fenix",
-            version = MOZ_APP_VERSION, buildId = MOZ_APP_BUILDID, vendor = MOZ_APP_VENDOR,
-            releaseChannel = MOZ_UPDATE_CHANNEL, distributionId = distributionId
-        )
-        services.add(socorroService)
-
         val intent = Intent(context, HomeActivity::class.java).apply {
             flags = Intent.FLAG_ACTIVITY_NEW_TASK or Intent.FLAG_ACTIVITY_CLEAR_TOP
         }
@@ -88,11 +78,11 @@ class Analytics(
         CrashReporter(
             context = context,
             services = services,
-            telemetryServices = listOf(GleanCrashReporterService(context)),
+            telemetryServices = listOf(),
             shouldPrompt = CrashReporter.Prompt.ALWAYS,
             promptConfiguration = CrashReporter.PromptConfiguration(
                 appName = context.getString(R.string.app_name),
-                organizationName = "Mozilla"
+                organizationName = "Ghostery"
             ),
             enabled = true,
             nonFatalCrashIntent = pendingIntent
@@ -101,12 +91,9 @@ class Analytics(

     val metrics: MetricController by lazyMonitored {
         MetricController.create(
-            listOf(
-                GleanMetricsService(context),
-                AdjustMetricsService(context as Application)
-            ),
-            isDataTelemetryEnabled = { context.settings().isTelemetryEnabled },
-            isMarketingDataTelemetryEnabled = { context.settings().isMarketingTelemetryEnabled },
+            listOf(),
+            isDataTelemetryEnabled = { false },
+            isMarketingDataTelemetryEnabled = { false },
             context.settings()
         )
     }
diff --git a/app/src/main/java/org/mozilla/fenix/crashes/DummyCrashReporter.kt b/app/src/main/java/org/mozilla/fenix/crashes/DummyCrashReporter.kt
new file mode 100644
index 000000000..de5b53ff5
--- /dev/null
+++ b/app/src/main/java/org/mozilla/fenix/crashes/DummyCrashReporter.kt
@@ -0,0 +1,19 @@
+package org.mozilla.fenix.crashes
+
+import mozilla.components.lib.crash.Crash
+import mozilla.components.lib.crash.service.CrashReporterService
+import mozilla.components.concept.base.crash.Breadcrumb
+
+class DummyCrashReporter : CrashReporterService {
+    override val id: String = "dummy"
+
+    override val name: String = "dummy"
+
+    override fun createCrashReportUrl(identifier: String): String? = null
+
+    override fun report(throwable: Throwable, breadcrumbs: ArrayList<Breadcrumb>): String? = null
+
+    override fun report(crash: Crash.NativeCodeCrash): String? = null
+
+    override fun report(crash: Crash.UncaughtExceptionCrash): String? = null
+}
\ No newline at end of file
diff --git a/app/src/main/res/xml/preferences.xml b/app/src/main/res/xml/preferences.xml
index e1e9be315..9308df8be 100644
--- a/app/src/main/res/xml/preferences.xml
+++ b/app/src/main/res/xml/preferences.xml
@@ -125,16 +125,6 @@
             app:iconSpaceReserved="false"
             android:title="@string/preferences_delete_browsing_data_on_quit" />

-        <androidx.preference.Preference
-            android:key="@string/pref_key_notifications"
-            app:iconSpaceReserved="false"
-            android:title="@string/preferences_notifications" />
-
-        <androidx.preference.Preference
-            android:key="@string/pref_key_data_choices"
-            app:iconSpaceReserved="false"
-            android:title="@string/preferences_data_collection" />
-
     </androidx.preference.PreferenceCategory>

     <PreferenceCategory
--
2.35.1

