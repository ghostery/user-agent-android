From 95fbea22ec8f1d85d01577793db915f12d466c30 Mon Sep 17 00:00:00 2001
From: Stefano Pacifici <stefano.pacifici@gmail.com>
Date: Thu, 23 Jul 2020 17:00:11 +0200
Subject: Forcing the display of the Ghostery hub at first startup

---
 .../java/org/mozilla/fenix/HomeActivity.kt     | 18 ++++++++++++++++++
 1 file changed, 18 insertions(+)

diff --git a/app/src/main/java/org/mozilla/fenix/HomeActivity.kt b/app/src/main/java/org/mozilla/fenix/HomeActivity.kt
index 3bbdc27b7..453db43c1 100644
--- a/app/src/main/java/org/mozilla/fenix/HomeActivity.kt
+++ b/app/src/main/java/org/mozilla/fenix/HomeActivity.kt
@@ -38,6 +38,7 @@ import kotlinx.coroutines.delay
 import kotlinx.coroutines.launch
 import kotlinx.coroutines.withContext
 import mozilla.components.browser.search.SearchEngine
+import mozilla.components.browser.session.Session
 import mozilla.components.browser.session.SessionManager
 import mozilla.components.browser.state.state.SessionState
 import mozilla.components.browser.state.state.WebExtensionState
@@ -306,6 +307,23 @@ open class HomeActivity : LocaleAwareAppCompatActivity(), NavHostActivity {
             }
         }
         /* Ghostery End */
+
+        /* Ghostery Begin: on-boarding */
+        // This is an hack to force the browser to display the extension on-boarding on start-up
+        val hubPattern = """moz-extension://[^/]+/app/templates/hub\.html.*""".toRegex()
+        components.core.sessionManager.register(
+            owner = this,
+            observer = object : SessionManager.Observer {
+                override fun onSessionSelected(session: Session) {
+                    if (hubPattern.matches(session.url) &&
+                        navHost.navController.currentDestination?.id != R.id.browserFragment
+                    ) {
+                        navHost.navController.navigate(R.id.browserFragment)
+                    }
+                }
+            }
+        )
+        /* Ghostery End */
     }
 
     override fun onStart() {
-- 
2.28.0

